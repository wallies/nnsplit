name: CI

on:
  release:
    types: [published]
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security-audit:
    permissions:
      contents: read # for actions/checkout to fetch code
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
      with:
        egress-policy: audit
        allowed-endpoints: >
          api.github.com:443
          github.com:443
          objects.githubusercontent.com:443
          ghcr.io:443
          pkg-containers.githubusercontent.com:443

    - name: Checkout the code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v2
      with:
        fetch-depth: 0

    - name: Run vulnerability scanner in repo mode
      if: github.actor != 'dependabot[bot]'
      uses: aquasecurity/trivy-action@062f2592684a31eb3aa050cc61e7ca1451cecd3d
      with:
        scan-type: 'fs'
        ignore-unfixed: true
        format: 'table'
        vuln-type: 'library'
        severity: 'CRITICAL,HIGH'
        scanners: 'vuln,config,secret'

    - name: Run vulnerability scanner in repo mode
      if: github.actor == 'dependabot[bot]'
      uses: aquasecurity/trivy-action@062f2592684a31eb3aa050cc61e7ca1451cecd3d
      with:
        scan-type: 'fs'
        ignore-unfixed: false
        format: 'table'
        vuln-type: 'library'
        severity: 'HIGH,CRITICAL'
        scanners: 'vuln,config,secret'

  build-rust:
    needs: security-audit
    runs-on: ubuntu-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            crates.io:443
            files.pythonhosted.org:443
            github.com:443
            pypi.org:443
            static.crates.io:443
            index.crates.io:443
            pipelinesghubeus12.actions.githubusercontent.com:443
            acghubeus2.actions.githubusercontent.com:443
            productionresultssa0.blob.core.windows.net:443

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v3.3.0
        with:
          fetch-depth: 0

      - name: Cache cargo registry
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
        with:
          command: build
          args: --verbose

      - run: rustup component add clippy
      - run: cargo clean
      - run: cargo clippy --all-features

      - uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1.0.3
        with:
          command: test
          args: --verbose --all-features

  python-linux:
    needs: security-audit
    runs-on: ubuntu-latest
    env:
      working-directory: bindings/python
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit
          allowed-endpoints: >
            api.github.com:443
            crates.io:443
            github.com:443
            static.crates.io:443
            pypi.org:443
            files.pythonhosted.org:443
            quay.io:443
            cdn.quay.io:443
            cdn01.quay.io:443
            cdn02.quay.io:443
            cdn03.quay.io:443
            sh.rustup.rs:443
            static.rust-lang.org:443
            objects.githubusercontent.com:443
            ghcr.io:443

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v3.3.0
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.10'
          architecture: x64

      - name: Update version (if release) # only needed for python since we store artifacts, others are rebuilt
        if: github.event_name == 'release'
        run: |
          bash update_version.sh ${{ github.event.release.tag_name }}

      - name: Install
        run: |
          python -m pip install --upgrade pip
          make install
        working-directory: ${{env.working-directory}}

      - name: Move cargo build to cargo toml
        run: |
          mv Cargo.toml Cargo.temp
          cp Cargo.build.toml Cargo.toml
        working-directory: ${{env.working-directory}}
          
      - name: Build Wheels - manylinux
        uses: messense/maturin-action@2c5c1560848aaa364c3545136054932db5fa27b7
        with:
          rust-toolchain: stable
          manylinux: auto
          target: x86_64
          args: --release -i 3.10 3.11
          # args: --release --sdist -o dist -i 3.10 3.11
          maturin-version: 0.13.5
          working-directory: ${{env.working-directory}}

      - name: Upload wheels
        if: github.event_name == 'release'
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: python-wheel
          path: bindings/python/target/wheels/*

  python-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [build-rust, python-linux ]
    permissions:
      contents: write # To add assets to a release.
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@eb238b55efaa70779f274895e782ed17c84f2895 # v2.6.1
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v3.3.0
        with:
          ref: ${{ github.head_ref }}

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1.0.7
        with:
          profile: minimal
          toolchain: stable

      - name: 'Set up Python 3.10'
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.10'

      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: python-wheel
          path: python-wheel

      - name: Update version
        run: |
          bash update_version.sh ${{ github.event.release.tag_name }}

      - name: Upload release binaries
        uses: alexellis/upload-assets@259de5111cb56966d046ced998941e93f91d2c93
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_paths: '["./python-wheel/nnsplit-*"]'
