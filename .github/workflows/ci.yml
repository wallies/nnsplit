name: CI

on:
  release:
    types: [published]
  push:
  pull_request:

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  build-javascript:
    runs-on: ubuntu-18.04
    env:
      working-directory: bindings/javascript
    strategy:
      matrix:
        browser: ["firefox", "chrome", "electron"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install wasm-pack # need a build from master for https://github.com/rustwasm/wasm-pack/pull/839
        run: cargo install --git https://github.com/rustwasm/wasm-pack --rev d46d1c6
      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'
      - name: Install dependencies
        run: npm install
        working-directory: ${{env.working-directory}}
      - name: Build module
        run: npm run build
        working-directory: ${{env.working-directory}}
      - name: Run Node.js tests
        run: npm run test:node
        working-directory: ${{env.working-directory}}
      - name: Run Cypress tests
        uses: cypress-io/github-action@v5
        with:
          working-directory: ${{env.working-directory}}
          start: npm run start_test_server
          wait-on: "http://localhost:8080"
          browser: ${{ matrix.browser }}

  build-rust:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose
      - run: rustup component add clippy
      - run: cargo clippy --all-features
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all-features

  build-python:
    runs-on: ${{ matrix.os }}
    env:
      working-directory: bindings/python
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install GSED (if needed) # needed by update_version.sh
        if: github.event_name == 'release' && matrix.os == 'macos-latest'
        run: |
          brew install gnu-sed
      - name: Update version (if release) # only needed for python since we store artifacts, others are rebuilt
        if: github.event_name == 'release'
        run: |
          bash update_version.sh ${{ github.event.release.tag_name }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          make install
        working-directory: ${{env.working-directory}}
      - name: Build
        run: |
          make build
        working-directory: ${{env.working-directory}}
      - name: Test
        run: |
          make test
        working-directory: ${{env.working-directory}}
      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v2
        with:
          name: python-wheel
          path: bindings/python/target/wheels/*

  publish:
    runs-on: ubuntu-18.04
    needs: [build-javascript, build-rust, build-python]
    if: github.event_name == 'release'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: Install wasm-pack # need a build from master for https://github.com/rustwasm/wasm-pack/pull/839
        run: cargo install --git https://github.com/rustwasm/wasm-pack --rev d46d1c6
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - run: |
          pip install twine==3.2
      - uses: actions/download-artifact@v2
        with:
          name: python-wheel
          path: python-wheel
      - name: Update version
        run: |
          bash update_version.sh ${{ github.event.release.tag_name }}
      - name: Run release script
        run: |
          bash release.sh
        env:
          CARGO_KEY: ${{ secrets.CARGO_KEY }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          WHEEL_DIR: python-wheel
      - run: |
          rm -r python-wheel
      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: v${{ github.event.release.tag_name }}
          branch: main
